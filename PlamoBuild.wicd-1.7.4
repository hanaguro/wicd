#!/bin/sh
##############################################################
pkgbase="wicd"
vers="1.7.4"
url="http://deb.debian.org/debian/pool/main/w/wicd/wicd_1.7.4+tb2+2019.09.18git2e0ba579.orig.tar.gz"
verify=""
digest=""
arch=`uname -m`
build=B1
src="wicd-1.7.4"
OPT_CONFIG=""
DOCS="AUTHORS INSTALL LICENSE NEWS README"
patchfiles="
03-import-wpath.patch
04-bytes-vs-strings-in-setup.py.patch
26-support_etc-network_scripts.patch
32-prefer_pkexec.patch
35-fix_ValueError_None_is_not_in_list.patch
36-fix_wrongly_displayed_keybinding.patch
37-fix_IndexError_list_index_out_of_range.patch
38-fix_typo_for_pedantic_wpa_supplicant_2.6.patch
39-add_wpa-peap_without_domain.patch
40-initialize_wicd-gtk_wifi-on-off-button.patch
41-fix_wicd-manager-settings.conf_5_man_page_wrt_wired_connect_mode.patch
42-fix_documentation_wrt_generated_dhclient.conf.patch
43-fix-wrong-Galician-translation.patch
44-fix_wicd-curses_AttributeError_in_keypress-function.patch
45-update_systemd_service_file.patch
46-dhcpcd_is_now_dhcpcd5.patch
47-fix-833929-no-autoconnect-when-GUI-is-open.patch
wicd-1.7.4-plamo.patch
99-wicd-1.7.4-plamo-02.patch
"
# specifies files that are not in source archive and patchfiles
addfiles=""
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  source copy build. patch apply in build dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ;  cp -a $S $B  
    cd $B
    for patch in $patchfiles ; do
       patch -p1 < $W/$patch
    done
    # if [ -f autogen.sh ] ; then
    #   sh ./autogen.sh
    # fi

    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    python setup.py configure --resume=/usr/share/wicd/scripts/ --suspend=/usr/share/wicd/scripts/ --verbose --python=/usr/bin/python --lib=/usr/lib --sbin=/usr/bin --no-install-init --no-install-gnome-shell-extensions

    if [ $? != 0 ]; then
        echo "configure error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_build -eq 1 ] ; then
    cd $B 
    python setup.py build
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  python setup.py install --root $P --prefix=/usr

  mkdir -p $P/etc/rc.d/init.d
  cp $B/in/init\=plamo\=wicd.in $P/etc/rc.d/init.d/wicd

  for i in `seq 0 6` ; do
      mkdir -p $P/etc/rc.d/rc$i.d
  done
  ( cd $P/etc/rc.d/rc0.d ; ln -sf ../init.d/wicd K80wicd )
  ( cd $P/etc/rc.d/rc1.d ; ln -sf ../init.d/wicd K80wicd )
  ( cd $P/etc/rc.d/rc2.d ; ln -sf ../init.d/wicd K80wicd )
  ( cd $P/etc/rc.d/rc3.d ; ln -sf ../init.d/wicd S40wicd )
  ( cd $P/etc/rc.d/rc4.d ; ln -sf ../init.d/wicd S40wicd )
  ( cd $P/etc/rc.d/rc5.d ; ln -sf ../init.d/wicd S40wicd )
  ( cd $P/etc/rc.d/rc6.d ; ln -sf ../init.d/wicd K80wicd )

  # don't need systemd config
  #   stays at $P/lib/systemd/system/wicd.service
  rm -rf $P/lib


################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
